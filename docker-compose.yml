version: '3.8'

services:
  postgres:
    image: postgres:16
    container_name: nest-postgres-db
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /data/postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - commerce-network

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - '${PGADMIN_PORT:-5050}:80'
    networks:
      - commerce-network
    restart: unless-stopped

  mongo:
    image: mongo
    container_name: mongo-db
    ports:
      - '27017:27017'
    networks:
      - commerce-network
    volumes:
      - mongo-data:/data/db

  nest-app:
    container_name: nest-app
    build:
      context: .
      dockerfile: Dockerfile
    command: npm run start:dev
    ports:
      - '3000:3000'
    volumes:
      - .:/usr/src/app
      - node_modules:/usr/src/app/node_modules
    depends_on:
      - postgres
      - mongo
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      JWT_SECRET: ${JWT_SECRET}
    networks:
      - commerce-network

  nest-app-4:
    container_name: nest-app
    build:
      context: .
      dockerfile: Dockerfile
    command: npm run start:dev
    ports:
      - '3000:3000'
    volumes:
      - .:/usr/src/app
      - node_modules:/usr/src/app/node_modules
    depends_on:
      - postgres
      - mongo
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      JWT_SECRET: ${JWT_SECRET}
    networks:
      - commerce-network

  nest-app-3:
    container_name: nest-app
    build:
      context: .
      dockerfile: Dockerfile
    command: npm run start:dev
    ports:
      - '3000:3000'
    volumes:
      - .:/usr/src/app
      - node_modules:/usr/src/app/node_modules
    depends_on:
      - postgres
      - mongo
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      JWT_SECRET: ${JWT_SECRET}
    networks:
      - commerce-network

  nest-app-2:
    container_name: nest-app
    build:
      context: .
      dockerfile: Dockerfile
    command: npm run start:dev
    ports:
      - '3000:3000'
    volumes:
      - .:/usr/src/app
      - node_modules:/usr/src/app/node_modules
    depends_on:
      - postgres
      - mongo
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      JWT_SECRET: ${JWT_SECRET}
    networks:
      - commerce-network

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - '8081:8081'
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=secret

networks:
  commerce-network:
    driver: bridge

volumes:
  pgdata:
  pgadmin:
  mongo-data:
  node_modules:
